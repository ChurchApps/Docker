version: "2.1"
services:

#used to create a docker of mysql , if you prefer to have an external mysql database, you can remove this block 
############################################################START Mysql Container###############################################################

  mysql:
    container_name: "fs-mysql"
    image: mysql:5.6
    environment:
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    networks:
      - fs_net
    volumes:
      - ./init.sql:/data/application/init.sql
      - mysql_data_fs:/var/lib/mysql
    command: --init-file /data/application/init.sql
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      interval: 30s
      timeout: 20s
      retries: 10
############################################################END MYSQL Container###############################################################





############################################################START OF Core APIs###############################################################
  attendance-api:
    container_name: "fs-attendance-api"
    image: livecs/attendanceapi
    environment: 
      - API_ENV=${ENVIREMENT}
      - APP_NAME=AttendanceApi
      - SERVER_PORT=8085
      - DB_HOST=${MYSQL_HOSTNAME}
      - DB_DATABASE=attendance
      - DB_USER=${MYSQL_USERNAME}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
    ports:
      - "8085:8085"
    networks:
      - fs_net
    depends_on:
      mysql:
        condition: service_healthy

  giving-api:
    container_name: "fs-giving-api"
    image: livecs/givingapi
    environment: 
      - API_ENV=${ENVIREMENT}
      - APP_NAME=GivingApi
      - SERVER_PORT=8084
      - DB_HOST=${MYSQL_HOSTNAME}
      - DB_DATABASE=giving
      - DB_USER=${MYSQL_USERNAME}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
    ports:
      - "8084:8084"
    networks:
      - fs_net
    depends_on:
      mysql:
        condition: service_healthy

  membership-api:
    container_name: "fs-membership-api"
    image: livecs/membershipapi
    environment: 
      - API_ENV=${ENVIREMENT}
      - APP_NAME=MembershipApi
      - SERVER_PORT=8083
      - DB_HOST=${MYSQL_HOSTNAME}
      - DB_DATABASE=membership
      - DB_USER=${MYSQL_USERNAME}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
    ports:
      - "8083:8083"
    networks:
      - fs_net
    depends_on:
      mysql:
        condition: service_healthy

  access-api:
    container_name: "fs-access-api"
    image: livecs/accessapi
    environment: 
      - API_ENV=${ENVIREMENT}
      - APP_NAME=AccessApi
      - SERVER_PORT=8082
      - DB_HOST=${MYSQL_HOSTNAME}
      - DB_DATABASE=access
      - DB_USER=${MYSQL_USERNAME}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
    ports:
      - "8082:8082"
    networks:
      - fs_net
    depends_on:
      mysql:
        condition: service_healthy   
############################################################END OF Core APIs#################################################################





############################################################START OF CHUMS-APP###############################################################
#   chums-app:
#     container_name: "fs-chums-app"
#     tty: true
#     build: ../../../Images/Chums/ChumsApp
#     ports:
#       - "3101:3101"
#     networks:
#       - fs_net

#   chums-web:
#     container_name: "fs-chums-web"
#     tty: true
#     build: ../../../Images/Chums/ChumsWeb
#     ports:
#       - "3100:3100"
#     networks:
#       - fs_net

#   churchapps-web:
#     container_name: "fs-churchapps-web"
#     tty: true
#     build: ../../../Images/ChurchApps/ChurchAppsWeb
#     ports:
#       - "3400:3400"
#     networks:
#       - fs_net

#   accounts-app:
#     container_name: "fs-accounts-app"
#     tty: true
#     build: ../../../Images/ChurchApps/AccountsApp
#     ports:
#       - "3401:3401"
#     networks:
#       - fs_net

#   streaminglive-web:
#     container_name: "fs-streaminglive-web"
#     tty: true
#     build: ../../../Images/StreamingLive/StreamingLiveWeb
#     ports:
#       - "3200:3200"
#     networks:
#       - fs_net

#   streaminglive-chat:
#     container_name: "fs-streaminglive-chat"
#     build: ../../../Images/StreamingLive/StreamingLiveChat
#     ports:
#       - "8201:8201"
#     networks:
#       - fs_net

#   streaminglive-app:
#     container_name: "fs-streaminglive-app"
#     tty: true
#     build: ../../../Images/StreamingLive/StreamingLiveApp
#     ports:
#       - "3201:3201"
#     networks:
#       - fs_net

#   streaminglive-api:
#     container_name: "fs-streaminglive-api"
#     build: ../../../Images/StreamingLive/StreamingLiveApi
#     ports:
#       - "8200:8200"
#     networks:
#       - fs_net
#     depends_on:
#       mysql:
#         condition: service_healthy 

#   b1-api:
#     container_name: "fs-b1-api"
#     build: ../../../Images/B1/B1Api
#     ports:
#       - "8300:8300"
#     networks:
#       - fs_net

#   b1-admin:
#     container_name: "fs-b1-admin"
#     tty: true
#     build: ../../../Images/B1/B1Admin
#     ports:
#       - "3301:3301"
#     networks:
#       - fs_net

#   b1-app:
#     container_name: "fs-b1-app"
#     build: ../../../Images/B1/B1App
#     ports:
#       - "19000:19000"
#       - "19001:19001"
#       - "19002:19002"
#       - "19003:19003"
#       - "19004:19004"
#       - "19005:19005"
#       - "19006:19006"
#     networks:
#       - fs_net

networks:
  fs_net:
    ipam:
      config:
        - subnet: 172.40.0.0/24
volumes: 
  mysql_data_fs : {}